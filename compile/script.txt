; [version 10]

DEF bootloader
IF NOT stop
CMPR "L" $_ver "1.1"
IF $_cmpr
NEW stop
PRINT "Your version is not supported"
PRINT "1.3 or later required"
ELSE
; [version 13]

CALL "main"
CMPR "NE" $_ret "0"
IF $_cmpr
PRINT "System process fatal exit"
ENDIF
HLT
ENDIF
ENDIF
ENDDEF bootloader
; [version 13]

DEF main
CMPR "L" $_ver "1.3"
IF $_cmpr
IF NOT stop
NEW stop "0"
PRINT "Your version is not supported"
PRINT "1.3 or later required"
ENDIF
CMPR "GE" $_ver "1.1"
IF $_cmpr
IF $_graphics
SCREENFILL "0x000000"
SCREENOUT "10" "20" "0xFFFFFF" "Your version is incompatible"
CMPR "L" $_ww "479"
IF $_cmpr
SCREENOUT "10" "40" "0xFFFFFF" "VSB Engine 1.3 or later is required"
ELSE
SCREENOUT "10" "30" "0xFFFFFF" "VSB Engine 1.3 or later is required"
ENDIF
ENDIF
CMPR "EQL" $stop "1"
IF $_cmpr
CMPR "L" $_ww "479"
IF $_cmpr
SCREENLN "40" "375" "40" "385" "0xFFFFFF"
ELSE
SCREENLN "30" "192" "30" "197" "0xFFFFFF"
ENDIF
SET stop "0"
ELSE
SET stop "1"
ENDIF
SCREENUPD
ENDIF
ENDIF
IF NOT stopa
NEW stopa "0"
PRINT "[HLT] Version is incompatible"
ENDIF
ENDIF
IF NOT stop
PRINT "[OK] Version is supported"
IF NOT $_graphics
PRINT "[HLT] No graphics module found!"
HLT
ENDIF
PRINT "[OK] Graphics module found"
PRINT "Switching to kernel"
CALL "kernel"
CMPR "NE" $_ret "0"
IF $_cmpr
PRINT "[FATAL] Kernel exited with code " $_ret
ELSE
PRINT "[OK] Kernel exited with code 0"
ENDIF
HLT
ENDIF
ENDDEF main
; [version 13]

DEF kernel
; Memory size
NEW memsize "0"
ALOC "4"

; default mem interface
; 1: Data 1
; 2: Data 2
; 3: Data type
; 4: Out of use

; Interface at 1
; 1: Allocated memory
; 2: Memory block size
; 3: 0: memory info
SETM "1" "4"
SETM "2" "4"
SETM "3" "0"
SETM "4" "0"

PRINT "enter to allocate memory" $_ask
PUSH "0"
PUSH "0"
; 1: data type int
PUSH "1"
PUSH "0"
CALL "addblck"

PRINT "all done" $_ask

CALL "rmblck"

; Free all memory
GETM memsize "1"
FREE $memsize
RET "0"
ENDDEF kernel
; [version 13]

DEF addblck
IF NOT counter
NEW counter "0"
NEW memamount "0"
NEW blocksize "1"
NEW arg "0"
GETM blocksize "2"
ALOC $blocksize
GETM memamount "1"
ADD memamount $blocksize
SETM "1" $memamount
SET counter $blocksize
ENDIF
POP arg
SETM $memamount $arg
SUB memamount "1"
SUB counter "1"
CMPR "LE" $counter "0"
IF $_cmpr
RET "0"
ENDIF
ENDDEF addblck
; [version 13]

DEF rmblck
NEW blocksize "0"
GETM blocksize "2"
FREE $blocksize
RET "0"
ENDDEF rmblck