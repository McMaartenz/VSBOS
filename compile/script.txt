;[version 10]

DEF bootloader
IF NOT stop
CMPR "L" $_ver "1.3"
IF $_cmpr
NEW stop
PRINT "Your version is not supported"
PRINT "1.3 or later required"
CMPR "GE" $_ver "1.1"
IF $_cmpr
;[version 11]

IF $_graphics
SCREENOUT "10" "10" "0xDD0000" "Your version is not supported"
SCREENOUT "10" "30" "0xDD0000" "1.3 or later required"
SCREENUPD
ENDIF
ENDIF
ELSE
;[version 11]

DO "main"
CMPR "NE" $_ret "0"
IF $_cmpr
PRINT "System process fatal exit"
ENDIF
HLT
ENDIF
ENDIF
ENDDEF bootloader
;[version 13]

DEF main
PRINT "[OK] Version is supported"
IF NOT $_graphics
PRINT "[HLT] No graphics module found!"
HLT
ENDIF
PRINT "[OK] Graphics module found"
PRINT "Switching to kernel"
CALL "kernel"
CMPR "NE" $_ret "0"
IF $_cmpr
PRINT "[FATAL] Kernel exited with code " $_ret
ELSE
PRINT "[OK] Kernel exited with code 0"
ENDIF
HLT
ENDDEF main
;[version 13]

DEF kernel
; Memory size
NEW memsize "0"
ALOC "16"

; Allocated memory, keeping track
SETM "1" "16"

; Actual memory start
SETM "2" "5"

; Memory block size
SETM "3" "4"

; Memory type (0: memory info)
SETM "4" "0"

PRINT "enter to allocate some mem" $_ask
PUSH "!"
PUSH "1"
PUSH "2"
PUSH "3"
CALL "addblck"

PRINT "enter to allocate even more mem" $_ask
PUSH "!!"
PUSH "4"
PUSH "5"
PUSH "6"
CALL "addblck"

PRINT "all done" $_ask

; Free all memory
GETM memsize "1"
FREE $memsize
RET "0"
ENDDEF kernel
;[version 13]

; Adds a block of memory

DEF addblck
NEW blocksize "0"
NEW allocated "0"

; Get block size from memory
GETM blocksize "3"

; Get allocated memory to system
GETM allocated "1"

NEW addr "0"
SET addr $allocated
ADD addr "1"
PUSH $addr
ALOC $blocksize
FOR "addblck1" $blocksize

RET "0"
ENDDEF addblck
;[version 13]

; Adds a block of memory

DEF addblck1
NEW addr "1"
POP addr

NEW arg "?1"
POP arg

SETM $addr $arg

ADD addr "1"
PUSH $addr
RET "0"
ENDDEF addblck1
